my_data <- read_excel("modularity_index.xlsx", col_names = FALSE)
View(my_data)
View(my_data)
cells <- c("breast_variant_human_mammary_epithelial_cells_vhmec", "cd19", "cd34_primary_cells", "cd3_primary_cells",
"cd4_primary_cells", "cd56_primary_cells", "cd8_primary_cells", "fetal_adrenal_gland", "fetal_heart", "fetal_intestine_large",
"fetal_intestine_small", "fetal_kidney", "fetal_lung", "fetal_muscle", "fetal_muscle_arm", "fetal_muscle_back",
"fetal_muscle_leg", "fetal_muscle_lower_limb", "fetal_muscle_trunk", "fetal_ovary", "fetal_renal_cortex",
"fetal_renal_pelvis", "fetal_skin", "fetal_spinal_cord", "fetal_stomach", "fetal_testes", "fetal_thymus", "fibroblast",
"fibroblasts_fetal_skin_abdomen", "fibroblasts_fetal_skin_back", "fibroblasts_fetal_skin_biceps_left", "fibroblasts_fetal_skin_biceps_right",
"fibroblasts_fetal_skin_quadriceps_left", "fibroblasts_fetal_skin_quadriceps_right", "fibroblasts_fetal_skin_scalp",
"fibroblasts_fetal_skin_upper_back", "gastric_mucosa", "h1_bmp4_derived_mesendoderm_cultured_cells", "h1_bmp4_derived_trophoblast_cultured_cells",
"h1_cells", "h1_derived_mesenchymal_stem_cells", "h1_derived_neuronal_progenitor_cultured_cells", "h9_cells",
"imr90_fetal_lung_fibroblasts_cell_line", "keratinocyte", "melanocyte", "ovary", "pancreas", "placenta",
"psoas_muscle", "small_bowel_mucosa", "testes")
my_data <- read_excel("modularity_index.xlsx", col_names = FALSE)
View(my_data)
title <- my_data(1, 2:)
title <- my_data[1, 2:]
title <- my_data[1,2]
print(title)
title <- c()
for (i in 2:ncol(my_data)){
title.append(my_data[1, i])
}
title <- my_data[1:rep(2:5)]
print(title)
title <- my_data[1,rep(2:5)]
print(title)
title <- my_data[1,rep(2:ncol(my_data))]
print(title)
title <- my_data[1,rep(2:ncol(my_data))]
cluster <- my_data[rep(2:11), 2]
print(title)
print(cluster)
View(title)
assign(my_data[1,2], my_data[rep(2:11), 2])
assign(as.character(my_data[1,2]), my_data[rep(2:11), 2])
title <- my_data[1,rep(2:ncol(my_data))]
cluster <- my_data[rep(2:11), 2]
print(title)
print(cluster)
print(cluster_num)
assign(as.character(my_data[1,2]), my_data[rep(2:11), 2])
df <- data.frame(cluster_num)
print(cluster_num)
print(df)
View(df)
assign(as.character(my_data[1,2]), my_data[rep(2:11), 2])
assign(as.character(my_data[1,3]), my_data[rep(2:11), 3])
df <- data.frame(cluster_num, spectral_clustering)
print(cluster_num)
print(df)
assign(as.character(my_data[1,2]), my_data[rep(2:11), 2])
assign(as.character(my_data[1,3]), as.numeric(my_data[rep(2:11), 3]))
assign(as.character(my_data[1,2]), my_data[rep(2:11), 2])
assign(as.character(my_data[1,3]), as.numeric(unlist(my_data[rep(2:11), 3])))
df <- data.frame(cluster_num, spectral_clustering)
print(cluster_num)
print(df)
assign(as.character(my_data[1,2]), as.numeric(unlist(my_data[rep(2:11), 2])))
assign(as.character(my_data[1,3]), as.numeric(unlist(my_data[rep(2:11), 3])))
df <- data.frame(cluster_num, spectral_clustering)
print(cluster_num)
print(df)
assign(as.character(my_data[1,2]), as.integer(unlist(my_data[rep(2:11), 2])))
assign(as.character(my_data[1,3]), as.numeric(unlist(my_data[rep(2:11), 3])))
df <- data.frame(cluster_num, spectral_clustering)
print(cluster_num)
print(df)
for (i in 2:ncol(my_data)){
assign(as.character(my_data[1,i]), as.integer(unlist(my_data[rep(2:11), i])))
}
df <- data.frame(cluster_num, spectral_clustering)
print(cluster_num)
print(df)
assign(as.character(my_data[1,i]), as.integer(unlist(my_data[rep(2:11), i])))
for (i in 3:ncol(my_data)){
assign(as.character(my_data[1,i]), as.numeric(unlist(my_data[rep(2:11), i])))
}
df <- data.frame(cluster_num, spectral_clustering)
print(cluster_num)
print(df)
assign(as.character(my_data[1,i]), as.integer(unlist(my_data[rep(2:11), i])))
for (i in 3:ncol(my_data)){
assign(as.character(my_data[1,i]), as.numeric(unlist(my_data[rep(2:11), i])))
}
df <- data.frame(cluster_num, spectral_clustering, node2vec_64d_p1_q1, node2vec_64d_p1_q0.5, node2vec_64d_p1_q2,
node2vec_128d_p1_q1, node2vec_128d_p1_q0.5, node2vec_128d_p1_q2, node2vec_256d_p1_q1, node2vec_256d_p1_q0.5,
node2vec_256d_p1_q2, DeepWalk_64d, DeepWalk_128d, DeepWalk_256d, Ohmnet_15_64d,
Ohmnet_15_128d, Ohmnet_15_256d)
print(df)
assign(as.character(my_data[1,2]), as.integer(unlist(my_data[rep(2:11), 2])))
for (i in 3:ncol(my_data)){
assign(as.character(my_data[1,i]), as.numeric(unlist(my_data[rep(2:11), i])))
}
df <- data.frame(cluster_num, spectral_clustering, node2vec_64d_p1_q1, node2vec_64d_p1_q0.5, node2vec_64d_p1_q2,
node2vec_128d_p1_q1, node2vec_128d_p1_q0.5, node2vec_128d_p1_q2, node2vec_256d_p1_q1, node2vec_256d_p1_q0.5,
node2vec_256d_p1_q2, DeepWalk_64d, DeepWalk_128d, DeepWalk_256d, Ohmnet_15_64d,
Ohmnet_15_128d, Ohmnet_15_256d)
assign(as.character(my_data[1,1]), df)
View(breast_variant_human_mammary_epithelial_cells_vhmec)
for (rownum in 1:12:649){
assign(as.character(my_data[rownum,2]), as.integer(unlist(my_data[rep(rownum + 1:rownum + 10), 2])))
for (i in 3:ncol(my_data)){
assign(as.character(my_data[rownum,i]), as.numeric(unlist(my_data[rep(rownum + 1:rownum + 10), i])))
}
df <- data.frame(cluster_num, spectral_clustering, node2vec_64d_p1_q1, node2vec_64d_p1_q0.5, node2vec_64d_p1_q2,
node2vec_128d_p1_q1, node2vec_128d_p1_q0.5, node2vec_128d_p1_q2, node2vec_256d_p1_q1, node2vec_256d_p1_q0.5,
node2vec_256d_p1_q2, DeepWalk_64d, DeepWalk_128d, DeepWalk_256d, Ohmnet_15_64d,
Ohmnet_15_128d, Ohmnet_15_256d)
assign(as.character(my_data[rownum,1]), df)
}
View(cd34_primary_cells)
cells <- c("breast_variant_human_mammary_epithelial_cells_vhmec", "cd19", "cd34_primary_cells", "cd3_primary_cells",
"cd4_primary_cells", "cd56_primary_cells", "cd8_primary_cells", "fetal_adrenal_gland", "fetal_heart", "fetal_intestine_large",
"fetal_intestine_small", "fetal_kidney", "fetal_lung", "fetal_muscle", "fetal_muscle_arm", "fetal_muscle_back",
"fetal_muscle_leg", "fetal_muscle_lower_limb", "fetal_muscle_trunk", "fetal_ovary", "fetal_renal_cortex",
"fetal_renal_pelvis", "fetal_skin", "fetal_spinal_cord", "fetal_stomach", "fetal_testes", "fetal_thymus", "fibroblast",
"fibroblasts_fetal_skin_abdomen", "fibroblasts_fetal_skin_back", "fibroblasts_fetal_skin_biceps_left", "fibroblasts_fetal_skin_biceps_right",
"fibroblasts_fetal_skin_quadriceps_left", "fibroblasts_fetal_skin_quadriceps_right", "fibroblasts_fetal_skin_scalp",
"fibroblasts_fetal_skin_upper_back", "gastric_mucosa", "h1_bmp4_derived_mesendoderm_cultured_cells", "h1_bmp4_derived_trophoblast_cultured_cells",
"h1_cells", "h1_derived_mesenchymal_stem_cells", "h1_derived_neuronal_progenitor_cultured_cells", "h9_cells",
"imr90_fetal_lung_fibroblasts_cell_line", "keratinocyte", "melanocyte", "ovary", "pancreas", "placenta",
"psoas_muscle", "small_bowel_mucosa", "testes")
my_data <- read_excel("modularity_index.xlsx", col_names = FALSE)
for (rownum in seq(1, 649, by=12)){
assign(as.character(my_data[rownum,2]), as.integer(unlist(my_data[rep(rownum + 1:rownum + 10), 2])))
for (i in 3:ncol(my_data)){
assign(as.character(my_data[rownum,i]), as.numeric(unlist(my_data[rep(rownum + 1:rownum + 10), i])))
}
df <- data.frame(cluster_num, spectral_clustering, node2vec_64d_p1_q1, node2vec_64d_p1_q0.5, node2vec_64d_p1_q2,
node2vec_128d_p1_q1, node2vec_128d_p1_q0.5, node2vec_128d_p1_q2, node2vec_256d_p1_q1, node2vec_256d_p1_q0.5,
node2vec_256d_p1_q2, DeepWalk_64d, DeepWalk_128d, DeepWalk_256d, Ohmnet_15_64d,
Ohmnet_15_128d, Ohmnet_15_256d)
assign(as.character(my_data[rownum,1]), df)
}
View(fetal_stomach)
View(fetal_stomach)
for (rownum in seq(1, 649, by=12)){
assign(as.character(my_data[rownum,2]), as.integer(unlist(my_data[rownum + 1:rownum + 10, 2])))
for (i in 3:ncol(my_data)){
assign(as.character(my_data[rownum,i]), as.numeric(unlist(my_data[rownum + 1:rownum + 10, i])))
}
df <- data.frame(cluster_num, spectral_clustering, node2vec_64d_p1_q1, node2vec_64d_p1_q0.5, node2vec_64d_p1_q2,
node2vec_128d_p1_q1, node2vec_128d_p1_q0.5, node2vec_128d_p1_q2, node2vec_256d_p1_q1, node2vec_256d_p1_q0.5,
node2vec_256d_p1_q2, DeepWalk_64d, DeepWalk_128d, DeepWalk_256d, Ohmnet_15_64d,
Ohmnet_15_128d, Ohmnet_15_256d)
assign(as.character(my_data[rownum,1]), df)
}
View(breast_variant_human_mammary_epithelial_cells_vhmec)
View(breast_variant_human_mammary_epithelial_cells_vhmec)
View(cd14_primary_cells)
View(cd14_primary_cells)
View(cd19)
View(cd19)
for (rownum in 1:55){
assign(as.character(my_data[(rownum - 1)*12+1,2]), as.integer(unlist(my_data[(rownum - 1)*12+1 + 1:(rownum - 1)*12+1 + 10, 2])))
for (i in 3:ncol(my_data)){
assign(as.character(my_data[(rownum - 1)*12+1,i]), as.numeric(unlist(my_data[(rownum - 1)*12+1 + 1:(rownum - 1)*12+1 + 10, i])))
}
df <- data.frame(cluster_num, spectral_clustering, node2vec_64d_p1_q1, node2vec_64d_p1_q0.5, node2vec_64d_p1_q2,
node2vec_128d_p1_q1, node2vec_128d_p1_q0.5, node2vec_128d_p1_q2, node2vec_256d_p1_q1, node2vec_256d_p1_q0.5,
node2vec_256d_p1_q2, DeepWalk_64d, DeepWalk_128d, DeepWalk_256d, Ohmnet_15_64d,
Ohmnet_15_128d, Ohmnet_15_256d)
assign(as.character(my_data[(rownum - 1)*12+1,1]), df)
}
View(breast_variant_human_mammary_epithelial_cells_vhmec)
for (rownum in 1:55){
assign(as.character(my_data[(rownum - 1)*12+1,2]), as.integer(unlist(my_data[(rownum - 1)*12+1 + 1:(rownum - 1)*12+1 + 10, 2])))
print(cluster_num)
for (i in 3:ncol(my_data)){
assign(as.character(my_data[(rownum - 1)*12+1,i]), as.numeric(unlist(my_data[(rownum - 1)*12+1 + 1:(rownum - 1)*12+1 + 10, i])))
}
df <- data.frame(cluster_num, spectral_clustering, node2vec_64d_p1_q1, node2vec_64d_p1_q0.5, node2vec_64d_p1_q2,
node2vec_128d_p1_q1, node2vec_128d_p1_q0.5, node2vec_128d_p1_q2, node2vec_256d_p1_q1, node2vec_256d_p1_q0.5,
node2vec_256d_p1_q2, DeepWalk_64d, DeepWalk_128d, DeepWalk_256d, Ohmnet_15_64d,
Ohmnet_15_128d, Ohmnet_15_256d)
assign(as.character(my_data[(rownum - 1)*12+1,1]), df)
}
print(as.integer(unlist(my_data[(rownum - 1)*12+1 + 1:(rownum - 1)*12+1 + 10, 2])))
print(as.integer(unlist(my_data[(1 - 1)*12+1 + 1:(1 - 1)*12+1 + 10, 2])))
print(as.integer(unlist(my_data[((1 - 1)*12+1 + 1):((1 - 1)*12+1 + 10), 2])))
for (rownum in 1:55){
assign(as.character(my_data[(rownum - 1)*12+1,2]), as.integer(unlist(my_data[((rownum-1)*12+1 + 1):((rownum - 1)*12+1 + 10), 2])))
print(cluster_num)
for (i in 3:ncol(my_data)){
assign(as.character(my_data[(rownum - 1)*12+1,i]), as.numeric(unlist(my_data[((rownum-1)*12+1 + 1):((rownum - 1)*12+1 + 10), i])))
}
df <- data.frame(cluster_num, spectral_clustering, node2vec_64d_p1_q1, node2vec_64d_p1_q0.5, node2vec_64d_p1_q2,
node2vec_128d_p1_q1, node2vec_128d_p1_q0.5, node2vec_128d_p1_q2, node2vec_256d_p1_q1, node2vec_256d_p1_q0.5,
node2vec_256d_p1_q2, DeepWalk_64d, DeepWalk_128d, DeepWalk_256d, Ohmnet_15_64d,
Ohmnet_15_128d, Ohmnet_15_256d)
assign(as.character(my_data[(rownum - 1)*12+1,1]), df)
}
View(fetal_kidney)
View(fetal_kidney)
knitr::opts_chunk$set(echo = TRUE)
library("readxl")
library("dplyr")
library("tidyr")
library("tidyverse")
library("knitr")
library("ggplot2")
theme_set(theme_bw())
library("sf")
library("rnaturalearth")
library("rnaturalearthdata")
library("lubridate")
library(reshape2)
cells <- c("breast_variant_human_mammary_epithelial_cells_vhmec", "cd19", "cd34_primary_cells", "cd3_primary_cells",
"cd4_primary_cells", "cd56_primary_cells", "cd8_primary_cells", "fetal_adrenal_gland", "fetal_heart", "fetal_intestine_large",
"fetal_intestine_small", "fetal_kidney", "fetal_lung", "fetal_muscle", "fetal_muscle_arm", "fetal_muscle_back",
"fetal_muscle_leg", "fetal_muscle_lower_limb", "fetal_muscle_trunk", "fetal_ovary", "fetal_renal_cortex",
"fetal_renal_pelvis", "fetal_skin", "fetal_spinal_cord", "fetal_stomach", "fetal_testes", "fetal_thymus", "fibroblast",
"fibroblasts_fetal_skin_abdomen", "fibroblasts_fetal_skin_back", "fibroblasts_fetal_skin_biceps_left", "fibroblasts_fetal_skin_biceps_right",
"fibroblasts_fetal_skin_quadriceps_left", "fibroblasts_fetal_skin_quadriceps_right", "fibroblasts_fetal_skin_scalp",
"fibroblasts_fetal_skin_upper_back", "gastric_mucosa", "h1_bmp4_derived_mesendoderm_cultured_cells", "h1_bmp4_derived_trophoblast_cultured_cells",
"h1_cells", "h1_derived_mesenchymal_stem_cells", "h1_derived_neuronal_progenitor_cultured_cells", "h9_cells",
"imr90_fetal_lung_fibroblasts_cell_line", "keratinocyte", "melanocyte", "ovary", "pancreas", "placenta",
"psoas_muscle", "small_bowel_mucosa", "testes")
my_data <- read_excel("modularity_index.xlsx", col_names = FALSE)
print(as.integer(unlist(my_data[((1 - 1)*12+1 + 1):((1 - 1)*12+1 + 10), 2])))
for (rownum in 1:55){
assign(as.character(my_data[(rownum - 1)*12+1,2]), as.integer(unlist(my_data[((rownum-1)*12+1 + 1):((rownum - 1)*12+1 + 10), 2])))
for (i in 3:ncol(my_data)){
assign(as.character(my_data[(rownum - 1)*12+1,i]), as.numeric(unlist(my_data[((rownum-1)*12+1 + 1):((rownum - 1)*12+1 + 10), i])))
}
df <- data.frame(cluster_num, spectral_clustering, node2vec_64d_p1_q1, node2vec_64d_p1_q0.5, node2vec_64d_p1_q2,
node2vec_128d_p1_q1, node2vec_128d_p1_q0.5, node2vec_128d_p1_q2, node2vec_256d_p1_q1, node2vec_256d_p1_q0.5,
node2vec_256d_p1_q2, DeepWalk_64d, DeepWalk_128d, DeepWalk_256d, Ohmnet_15_64d,
Ohmnet_15_128d, Ohmnet_15_256d)
assign(as.character(my_data[(rownum - 1)*12+1,1]), df)
}
dfm <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5')],id.vars = 1)
ggplot(dfm, aes(x=cluster_num, y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge")
dfm <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5')],id.vars = 1)
ggplot(dfm, aes(x=cluster_num, y = "Modularity value")) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge"
dfm <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5')],id.vars = 1)
ggplot(dfm, aes(x=cluster_num, y = "Modularity value")) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge")
dfm <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5')],id.vars = 1)
ggplot(dfm, aes(x=cluster_num, y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge")
dfm <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5')],id.vars = 1)
ggplot(dfm, aes(x=cluster_num, y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge") +
+labs(y= "Modularity Value")
dfm <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5')],id.vars = 1)
ggplot(dfm, aes(x=cluster_num, y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge") +
labs(y= "Modularity Value")
dfm <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5')],id.vars = 1)
ggplot(dfm, aes(x=cluster_num, y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge") +
labs(y= "Modularity Value", x= "Cluster Num")
dfm <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5','node2vec_128d_p1_q2')],id.vars = 1)
ggplot(dfm, aes(x=cluster_num, y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge") +
labs(y= "Modularity Value", x= "Cluster Num")
dfm <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5','node2vec_128d_p1_q2')],id.vars = 1)
ggplot(dfm, aes(x=cluster_num, y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge") +
labs(y= "Modularity Value", x= "Cluster Num") +
scale_x_discrete()
dfm <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5','node2vec_128d_p1_q2')],id.vars = 1)
ggplot(dfm, aes(x=cluster_num, y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge") +
labs(y= "Modularity Value", x= "Cluster Num") +
scale_x_discrete(limits=c("10", "20", "30", "40", "50", "60", "70", "80", "90", "100"))
dfm <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5','node2vec_128d_p1_q2')],id.vars = 1)
ggplot(dfm, aes(x=cluster_num, y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge") +
labs(y= "Modularity Value", x= "Cluster Num") +
scale_x_discrete(breaks=c("10", "20", "30", "40", "50", "60", "70", "80", "90", "100"))
dfm <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5','node2vec_128d_p1_q2')],id.vars = 1)
ggplot(dfm, aes(x=cluster_num, y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge") +
labs(y= "Modularity Value", x= "Cluster Num") +
dfm <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5','node2vec_128d_p1_q2')],id.vars = 1)
ggplot(dfm, aes(x=cluster_num, y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge") +
labs(y= "Modularity Value", x= "Cluster Num")
dfm <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5','node2vec_128d_p1_q2')],id.vars = 1)
ggplot(dfm, aes(x=cluster_num, y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge") +
labs(y= "Modularity Value", x= "Cluster Num") +
scale_x_continuous(limits=c(0, 100))
dfm <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5','node2vec_128d_p1_q2')],id.vars = 1)
ggplot(dfm, aes(x=cluster_num, y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge") +
labs(y= "Modularity Value", x= "Cluster Num") +
scale_x_continuous(limits=seq(0, 10, 100))
dfm <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5','node2vec_128d_p1_q2')],id.vars = 1)
ggplot(dfm, aes(x=cluster_num, y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge") +
labs(y= "Modularity Value", x= "Cluster Num") +
scale_x_continuous(limits=seq(0, 100, 10))
dfm <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5','node2vec_128d_p1_q2')],id.vars = 1)
ggplot(dfm, aes(x=cluster_num, y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge") +
labs(y= "Modularity Value", x= "Cluster Num") +
scale_x_continuous(breaks=seq(0, 100, 10))
dfm <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5','node2vec_128d_p1_q2')],id.vars = 1)
ggplot(dfm, aes(x=cluster_num, y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge") +
labs(y= "Modularity Value", x= "# of Clusters") +
scale_x_continuous(breaks=seq(0, 100, 10)) +
ggtitle("cd19")
dfm_1 <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5','node2vec_128d_p1_q2')],id.vars = 1)
ggplot(dfm_1, aes(x=cluster_num, y = value)) +
geom_line(aes(fill = variable),stat = "identity",position = "dodge") +
labs(y= "Modularity Value", x= "# of Clusters") +
scale_x_continuous(breaks=seq(0, 100, 10)) +
ggtitle("cd19")
dfm_1 <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5','node2vec_128d_p1_q2')],id.vars = 1)
ggplot(dfm_1, aes(x=cluster_num, y = value)) +
geom_line() +
labs(y= "Modularity Value", x= "# of Clusters") +
scale_x_continuous(breaks=seq(0, 100, 10)) +
ggtitle("cd19")
dfm_1 <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5','node2vec_128d_p1_q2')],id.vars = 1)
ggplot(dfm_1, aes(x=cluster_num, y = value)) +
geom_line(aes(fill = variable),stat = "identity",position = "dodge") +
labs(y= "Modularity Value", x= "# of Clusters") +
scale_x_continuous(breaks=seq(0, 100, 10)) +
ggtitle("cd19")
dfm_1 <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5','node2vec_128d_p1_q2')],id.vars = 1)
ggplot(dfm_1, aes(x=cluster_num)) +
geom_line(aes(y = value)) +
labs(y= "Modularity Value", x= "# of Clusters") +
scale_x_continuous(breaks=seq(0, 100, 10)) +
ggtitle("cd19")
dfm_1 <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5','node2vec_128d_p1_q2')],id.vars = 1)
ggplot(dfm_1, aes(x=cluster_num)) +
geom_line(aes(y = 'node2vec_128d_p1_q1')) +
labs(y= "Modularity Value", x= "# of Clusters") +
scale_x_continuous(breaks=seq(0, 100, 10)) +
ggtitle("cd19")
dfm_1 <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5','node2vec_128d_p1_q2')],id.vars = 1)
ggplot(dfm_1, aes(x=cluster_num)) +
geom_line(aes(y = node2vec_128d_p1_q1)) +
labs(y= "Modularity Value", x= "# of Clusters") +
scale_x_continuous(breaks=seq(0, 100, 10)) +
ggtitle("cd19")
dfm_1 <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5','node2vec_128d_p1_q2')],id.vars = 1)
ggplot(dfm_1, aes(x=cluster_num, y = value)) +
geom_line(aes(color = variable, linetype = variable)) +
labs(y= "Modularity Value", x= "# of Clusters") +
scale_x_continuous(breaks=seq(0, 100, 10)) +
ggtitle("cd19")
dfm_1 <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5','node2vec_128d_p1_q2')],id.vars = 1)
ggplot(dfm_1, aes(x=cluster_num, y = value)) +
geom_line(aes(color = variable, linetype = variable)) +
scale_color_manual(values = c("darkred", "steelblue", "green")) +
labs(y= "Modularity Value", x= "# of Clusters") +
scale_x_continuous(breaks=seq(0, 100, 10)) +
ggtitle("cd19")
dfm_1 <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5','node2vec_128d_p1_q2')],id.vars = 1)
ggplot(dfm_1, aes(x=cluster_num, y = value)) +
geom_line(aes(color = variable, linetype = line)) +
scale_color_manual(values = c("darkred", "steelblue", "green")) +
labs(y= "Modularity Value", x= "# of Clusters") +
scale_x_continuous(breaks=seq(0, 100, 10)) +
ggtitle("cd19")
dfm_1 <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5','node2vec_128d_p1_q2')],id.vars = 1)
ggplot(dfm_1, aes(x=cluster_num, y = value)) +
geom_line(aes(color = variable, linetype = solid)) +
scale_color_manual(values = c("darkred", "steelblue", "green")) +
labs(y= "Modularity Value", x= "# of Clusters") +
scale_x_continuous(breaks=seq(0, 100, 10)) +
ggtitle("cd19")
dfm_1 <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5','node2vec_128d_p1_q2')],id.vars = 1)
ggplot(dfm_1, aes(x=cluster_num, y = value)) +
geom_line(aes(color = variable, linetype = 1)) +
scale_color_manual(values = c("darkred", "steelblue", "green")) +
labs(y= "Modularity Value", x= "# of Clusters") +
scale_x_continuous(breaks=seq(0, 100, 10)) +
ggtitle("cd19")
dfm_1 <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5','node2vec_128d_p1_q2')],id.vars = 1)
ggplot(dfm_1, aes(x=cluster_num, y = value)) +
geom_line(aes(color = variable, linetype = variable)) +
scale_color_manual(values = c("darkred", "steelblue", "green")) +
labs(y= "Modularity Value", x= "# of Clusters") +
scale_x_continuous(breaks=seq(0, 100, 10)) +
ggtitle("cd19")
dfm_1 <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5','node2vec_128d_p1_q2')],id.vars = 1)
ggplot(dfm_1, aes(x=cluster_num, y = value)) +
geom_line(aes(color = variable, linetype = variable)) +
scale_color_manual(values = c("darkred", "steelblue", "darkgreen")) +
labs(y= "Modularity Value", x= "# of Clusters") +
scale_x_continuous(breaks=seq(0, 100, 10)) +
ggtitle("cd19")
dfm_1 <- melt(cd19[,c('cluster_num','node2vec_128d_p1_q1','node2vec_128d_p1_q0.5','node2vec_128d_p1_q2')],id.vars = 1)
ggplot(dfm_1, aes(x=cluster_num, y = value)) +
geom_line(aes(color = variable, linetype = variable)) +
scale_color_manual(values = c("darkred", "steelblue", "darkgreen")) +
scale_linetype_manual(values=c("solid", "solid", "solid")) +
labs(y= "Modularity Value", x= "# of Clusters") +
scale_x_continuous(breaks=seq(0, 100, 10)) +
ggtitle("cd19")
shinyApp(ui = ui, server = server)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
y
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(my_data)
runApp()
runApp()
View(my_data)
View(my_data)
View(my_data)
runApp()
runApp()
View(my_data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages(c("backports", "BH", "blob", "brew", "brio", "broom", "bslib", "cachem", "class", "cli", "coin", "cpp11", "crayon", "credentials", "crosstalk", "curl", "data.table", "DBI", "desc", "devtools", "diffobj", "digest", "DT", "dtplyr", "e1071", "fansi", "foreign", "fs", "gargle", "generics", "gert", "ggiraph", "glue", "googledrive", "googlesheets4", "googleway", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "isoband", "jpeg", "jqr", "jsonlite", "knitr", "later", "lattice", "libcoin", "lifecycle", "lubridate", "magrittr", "maps", "MASS", "Matrix", "matrixStats", "memoise", "mgcv", "mime", "multcomp", "mvtnorm", "nlme", "nnet", "openssl", "openxlsx", "packrat", "party", "pillar", "pkgbuild", "pkgload", "psych", "R6", "rcmdcheck", "Rcpp", "readr", "remotes", "reprex", "rgdal", "rgeos", "rio", "rjson", "rlang", "rmarkdown", "roxygen2", "rpart", "rsconnect", "rvest", "s2", "sessioninfo", "sf", "shiny", "shinyalert", "shinydashboard", "sp", "spatial", "stringi", "survival", "svglite", "systemfonts", "testthat", "TH.data", "tibble", "tidyr", "tinytex", "units", "usethis", "utf8", "uuid", "waldo", "withr", "wk", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "brew", "brio", "broom", "bslib", "cachem", "class", "cli", "coin", "cpp11", "crayon", "credentials", "crosstalk", "curl", "data.table", "DBI", "desc", "devtools", "diffobj", "digest", "DT", "dtplyr", "e1071", "fansi", "foreign", "fs", "gargle", "generics", "gert", "ggiraph", "glue", "googledrive", "googlesheets4", "googleway", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "isoband", "jpeg", "jqr", "jsonlite", "knitr", "later", "lattice", "libcoin", "lifecycle", "lubridate", "magrittr", "maps", "MASS", "Matrix", "matrixStats", "memoise", "mgcv", "mime", "multcomp", "mvtnorm", "nlme", "nnet", "openssl", "openxlsx", "packrat", "party", "pillar", "pkgbuild", "pkgload", "psych", "R6", "rcmdcheck", "Rcpp", "readr", "remotes", "reprex", "rgdal", "rgeos", "rio", "rjson", "rlang", "rmarkdown", "roxygen2", "rpart", "rsconnect", "rvest", "s2", "sessioninfo", "sf", "shiny", "shinyalert", "shinydashboard", "sp", "spatial", "stringi", "survival", "svglite", "systemfonts", "testthat", "TH.data", "tibble", "tidyr", "tinytex", "units", "usethis", "utf8", "uuid", "waldo", "withr", "wk", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "brew", "brio", "broom", "bslib", "cachem", "class", "cli", "coin", "cpp11", "crayon", "credentials", "crosstalk", "curl", "data.table", "DBI", "desc", "devtools", "diffobj", "digest", "DT", "dtplyr", "e1071", "fansi", "foreign", "fs", "gargle", "generics", "gert", "ggiraph", "glue", "googledrive", "googlesheets4", "googleway", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "isoband", "jpeg", "jqr", "jsonlite", "knitr", "later", "lattice", "libcoin", "lifecycle", "lubridate", "magrittr", "maps", "MASS", "Matrix", "matrixStats", "memoise", "mgcv", "mime", "multcomp", "mvtnorm", "nlme", "nnet", "openssl", "openxlsx", "packrat", "party", "pillar", "pkgbuild", "pkgload", "psych", "R6", "rcmdcheck", "Rcpp", "readr", "remotes", "reprex", "rgdal", "rgeos", "rio", "rjson", "rlang", "rmarkdown", "roxygen2", "rpart", "rsconnect", "rvest", "s2", "sessioninfo", "sf", "shiny", "shinyalert", "shinydashboard", "sp", "spatial", "stringi", "survival", "svglite", "systemfonts", "testthat", "TH.data", "tibble", "tidyr", "tinytex", "units", "usethis", "utf8", "uuid", "waldo", "withr", "wk", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "brew", "brio", "broom", "bslib", "cachem", "class", "cli", "coin", "cpp11", "crayon", "credentials", "crosstalk", "curl", "data.table", "DBI", "desc", "devtools", "diffobj", "digest", "DT", "dtplyr", "e1071", "fansi", "foreign", "fs", "gargle", "generics", "gert", "ggiraph", "glue", "googledrive", "googlesheets4", "googleway", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "isoband", "jpeg", "jqr", "jsonlite", "knitr", "later", "lattice", "libcoin", "lifecycle", "lubridate", "magrittr", "maps", "MASS", "Matrix", "matrixStats", "memoise", "mgcv", "mime", "multcomp", "mvtnorm", "nlme", "nnet", "openssl", "openxlsx", "packrat", "party", "pillar", "pkgbuild", "pkgload", "psych", "R6", "rcmdcheck", "Rcpp", "readr", "remotes", "reprex", "rgdal", "rgeos", "rio", "rjson", "rlang", "rmarkdown", "roxygen2", "rpart", "rsconnect", "rvest", "s2", "sessioninfo", "sf", "shiny", "shinyalert", "shinydashboard", "sp", "spatial", "stringi", "survival", "svglite", "systemfonts", "testthat", "TH.data", "tibble", "tidyr", "tinytex", "units", "usethis", "utf8", "uuid", "waldo", "withr", "wk", "xfun", "xml2", "yaml"))
install.packages(c("backports", "BH", "blob", "brew", "brio", "broom", "bslib", "cachem", "class", "cli", "coin", "cpp11", "crayon", "credentials", "crosstalk", "curl", "data.table", "DBI", "desc", "devtools", "diffobj", "digest", "DT", "dtplyr", "e1071", "fansi", "foreign", "fs", "gargle", "generics", "gert", "ggiraph", "glue", "googledrive", "googlesheets4", "googleway", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "isoband", "jpeg", "jqr", "jsonlite", "knitr", "later", "lattice", "libcoin", "lifecycle", "lubridate", "magrittr", "maps", "MASS", "Matrix", "matrixStats", "memoise", "mgcv", "mime", "multcomp", "mvtnorm", "nlme", "nnet", "openssl", "openxlsx", "packrat", "party", "pillar", "pkgbuild", "pkgload", "psych", "R6", "rcmdcheck", "Rcpp", "readr", "remotes", "reprex", "rgdal", "rgeos", "rio", "rjson", "rlang", "rmarkdown", "roxygen2", "rpart", "rsconnect", "rvest", "s2", "sessioninfo", "sf", "shiny", "shinyalert", "shinydashboard", "sp", "spatial", "stringi", "survival", "svglite", "systemfonts", "testthat", "TH.data", "tibble", "tidyr", "tinytex", "units", "usethis", "utf8", "uuid", "waldo", "withr", "wk", "xfun", "xml2", "yaml"))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages("xfun")
runApp()
shiny::runApp()
runApp()
install.packages(c("fs", "lubridate", "Rcpp"))
install.packages(c("fs", "lubridate", "Rcpp"))
install.packages(c("fs", "lubridate", "Rcpp"))
install.packages(c("fs", "lubridate", "Rcpp"))
install.packages(c("fs", "lubridate", "Rcpp"))
shiny::runApp()
runApp()
shiny::runApp()
runApp()
View(breast_variant_human_mammary_epithelial_cells_vhmec)
runApp()
runApp()
View(breast_variant_human_mammary_epithelial_cells_vhmec)
runApp()
